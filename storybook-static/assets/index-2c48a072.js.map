{"version":3,"file":"index-2c48a072.js","sources":["../../node_modules/clsx/dist/clsx.m.js","../../src/stories/Button/index.tsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import React from 'react';\nimport { clsx } from 'clsx';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * What background color to use\n   */\n  buttonStyle?: React.CSSProperties | undefined;\n  /**\n   * How large should the button be?\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Button contents\n   */\n  label: string;\n  /**\n   * Button style type\n   */\n  buttonType?: 'filled' | 'outlined' | 'text' | 'elevated' | 'tonal';\n  icon?: React.ReactNode;\n  loading?: boolean;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({\n  size = 'medium',\n  buttonStyle,\n  buttonType,\n  label,\n  icon,\n  loading,\n  ...props\n}: ButtonProps) => {\n  return (\n    <button\n      type=\"button\"\n      className={clsx(\n        'gap-1 font-medium flex justify-center items-center bg-primary-40 rounded-3xl py-2 px-5 shadow-lg hover:opacity-80 text-white',\n        buttonType === 'outlined' && 'border bg-white border-gray-400 text-primary-40 shadow-none',\n        buttonType === 'text' && 'bg-primary-100 hover:bg-primary-90 text-primary-40 shadow-none',\n        buttonType === 'elevated' && 'bg-primary-90 text-primary-40 drop-shadow-md',\n        buttonType === 'tonal' && 'bg-primary-90 hover:bg-primary-70 text-black shadow-none',\n        size === 'small' && 'py-1 px-3',\n        size === 'large' && 'py-3 px-6',\n        'disabled:bg-gray-200 disabled:text-gray-400 disabled:shadow-none'\n      )}\n      style={buttonStyle}\n      {...props}>\n      <div className={clsx(loading && 'animate-spin')}>{icon}</div>\n      {label}\n    </button>\n  );\n};\n"],"names":["r","t","f","n","clsx","Button","size","buttonStyle","buttonType","label","icon","loading","props","jsxs","jsx"],"mappings":"qDAAA,SAASA,EAAE,EAAE,CAAC,IAAIC,EAAEC,EAAEC,EAAE,GAAG,GAAa,OAAO,GAAjB,UAA8B,OAAO,GAAjB,SAAmBA,GAAG,UAAoB,OAAO,GAAjB,SAAmB,GAAG,MAAM,QAAQ,CAAC,EAAE,IAAIF,EAAE,EAAEA,EAAE,EAAE,OAAOA,IAAI,EAAEA,CAAC,IAAIC,EAAEF,EAAE,EAAEC,CAAC,CAAC,KAAKE,IAAIA,GAAG,KAAKA,GAAGD,OAAQ,KAAID,KAAK,EAAE,EAAEA,CAAC,IAAIE,IAAIA,GAAG,KAAKA,GAAGF,GAAG,OAAOE,CAAC,CAAQ,SAASC,GAAM,CAAC,QAAQ,EAAEH,EAAEC,EAAE,EAAEC,EAAE,GAAGD,EAAE,UAAU,SAAS,EAAE,UAAUA,GAAG,KAAKD,EAAED,EAAE,CAAC,KAAKG,IAAIA,GAAG,KAAKA,GAAGF,GAAG,OAAOE,CAAC,CC2B1V,MAAAE,EAAA,CAAA,CAAgB,KAAAC,EAAA,SACd,YAAAC,EACP,WAAAC,EACA,MAAAC,EACA,KAAAC,EACA,QAAAC,EACA,GAAAC,CAEF,IACEC,EACE,SAAC,CAAA,KAAA,SACM,UAAAT,EACM,+HACTI,IAAA,YAAA,8DAC6BA,IAAA,QAAA,iEACJA,IAAA,YAAA,+CACIA,IAAA,SAAA,2DACHF,IAAA,SAAA,YACNA,IAAA,SAAA,YACA,kEACpB,EACF,MAAAC,EACO,GAAAK,EACH,SAAA,CACJE,EAAA,MAAA,CAAA,UAAAV,EAAAO,GAAA,cAAA,EAAA,SAAAD,EAAA,EAAuDD,CACtD,CAAA,CAAA"}